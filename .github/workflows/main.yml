# This is a basic workflow to help you get started with Actions

name: TeXworks CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  - push
  - pull_request

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-linux:
    name: Build on Linux
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt update -y
        sudo apt install -y qtbase5-dev qtscript5-dev qttools5-dev qttools5-dev-tools zlib1g-dev libhunspell-dev libpoppler-qt5-dev libpoppler-private-dev liblua5.3-dev xvfb

    - name: Configure
      run: |
        pwd
        mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX='/usr' -DTW_BUILD_ID='github' ${GITHUB_WORKSPACE}

    - name: Build
      run: make -j
      working-directory: build

    - name: Test
      run: xvfb-run ctest -V
      working-directory: build

  build-win:
    name: Build on Windows
    runs-on: windows-latest
#    defaults:
#      run:
#        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

#    - name: Install Dependencies
#      run: |
#        vcpkg install hunspell:x64-windows lua:x64-windows zlib:x64-windows freetype:x64-windows lcms:x64-windows libjpeg-turbo:x64-windows
#        find C:/vcpkg/packages/
#
#    - name: Install Qt
#      uses: jurplel/install-qt-action@v2
#      with:
#        modules: 'qtscript'
#
#    - name: Build Poppler
#      run: python .github/workflows/build-poppler.py
#
#    - name: Configure
#      run: cmake -B build -DTW_BUILD_ID='github' -DCMAKE_TOOLCHAIN_FILE=${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake ${GITHUB_WORKSPACE}
#
#    - name: Build
#      run: cmake --build build
#
#    - name: Test
#      run: ctest -V
#      working-directory: build
    - name: Setup MSYS
      uses: numworks/setup-msys2@v1
      with:
        update: true

    - run: msys2do pacman --noconfirm -Ss cmake
    - run: msys2do pacman --noconfirm -Ss poppler
    - run: msys2do pacman --noconfirm -Ss qt5
    - run: msys2do pacman --noconfirm -Ss hunspell
    - run: msys2do pacman --noconfirm -Ss lua
    - run: msys2do pacman --noconfirm -Ss make

    - name: Install dependencies
      run: msys2do pacman --noconfirm -S cmake mingw-w64-x86_64-make mingw-w64-x86_64-gcc mingw-w64-x86_64-qt5 mingw-w64-x86_64-poppler mingw-w64-x86_64-hunspell mingw-w64-x86_64-lua
#      run: msys2do pacman --noconfirm -S mingw-w64-x86_64-cmake mingw-w64-x86_64-make

    - run: msys2do pacman --noconfirm -Ql cmake

    - run: msys2do ls -lisa /usr/bin/cmake*

    - name: Configure
# FIXME: Replace hardcoded path
#      run: d:\a\_temp\msys\msys64\usr\bin\bash.exe -ilc "pwd && echo `$OLDPWD && echo ^$PWD && echo ${env:OLDPWD} && cd `$OLDPWD && pwd && cmake -G 'MinGW Makefiles' -B build -DTW_BUILD_ID='github'"
#      run: cmake -G 'MinGW Makefiles' -B build -DTW_BUILD_ID='github'
#      run: cmake -G 'MSYS Makefiles' -B build -DTW_BUILD_ID='github'
#      run: msys2do pwd && which cmake && /usr/bin/cmake -B build -G `"MSYS Makefiles`" -DTW_BUILD_ID='github' && pwd
#      run: msys2do pwd && which cmake && /usr/bin/cmake -B build -G `"MSYS Makefiles`" -DTW_BUILD_ID='github' && pwd
#      run: msys2do find /usr/bin && /usr/bin/cmake.exe -B build -DTW_BUILD_ID='github' && pwd
      run: msys2do /usr/bin/cmake.exe

    - name: Build
      run: msys2do cmake --build build

    - name: Test
      run: msys2do ctest -V
      working-directory: build

  build-macosx:
    name: Build on Mac OS X
    runs-on: macos-latest
    if: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        brew update > brew_update.log || { print_error "Updating homebrew failed"; cat brew_update.log; exit 1; }
        brew install qt5
        brew install poppler
        brew install hunspell
        brew install lua

    - name: Configure
      run: cmake -B build -DTW_BUILD_ID='github' ${GITHUB_WORKSPACE} -DCMAKE_PREFIX_PATH="/usr/local/opt/qt5"

    - name: Build
      run: cmake --build build

    - name: Test
      run: ctest -V
      working-directory: build
