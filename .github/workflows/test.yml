name: Test
on:
  - push

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    if: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # fetch the entire history so we can create the changelog

    - name: Package for Launchpad
      id: package
      uses: ./.github/actions/package-launchpad
      with:
        DEB_PASSPHRASE: ${{ secrets.DEB_PASSPHRASE }}
        DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}

    - name: Deploy to Launchpad
      uses: ./.github/actions/deploy-launchpad
      with:
        changes_files: ${{ steps.package.outputs.changes_files }}
        devel-repo: "ppa:st.loeffler/test"
        stable-repo: "ppa:st.loeffler/test"

################################################################################

  wsl:
    name: WSL
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup WSL
      uses: Vampire/setup-wsl@v1
      with:
#        update: true
        additional-packages: apt-transport-https ca-certificates dirmngr
# software-properties-common for add-apt-repository

    - name: Install Dependencies
      shell: wsl-bash {0}
      run: |
        echo "::group::Install MXE"
        echo "deb https://pkg.mxe.cc/repos/apt stretch main" | sudo tee -a /etc/apt/sources.list
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C6BF758A33A3A276
        sudo apt update
        sudo apt install --assume-yes libgdk-pixbuf2.0-dev lzip mxe-i686-w64-mingw32.static-cairo mxe-i686-w64-mingw32.static-curl mxe-i686-w64-mingw32.static-freetype mxe-i686-w64-mingw32.static-glib mxe-i686-w64-mingw32.static-hunspell mxe-i686-w64-mingw32.static-jpeg mxe-i686-w64-mingw32.static-lcms mxe-i686-w64-mingw32.static-libpng mxe-i686-w64-mingw32.static-libwebp mxe-i686-w64-mingw32.static-lua mxe-i686-w64-mingw32.static-openjpeg mxe-i686-w64-mingw32.static-qtbase mxe-i686-w64-mingw32.static-qtdeclarative mxe-i686-w64-mingw32.static-qtscript mxe-i686-w64-mingw32.static-qttools mxe-i686-w64-mingw32.static-tiff mxe-i686-w64-mingw32.static-zlib

        MXEDIR=/usr/lib/mxe
        MXETARGET=i686-w64-mingw32.static
        sudo chmod --recursive a+w ${MXEDIR}
        #echo "MXE_TARGETS := ${MXETARGET}" >> ${MXEDIR}/settings.mk
        echo "MXE_USE_CCACHE=" >> ${MXEDIR}/settings.mk
        echo "::endgroup::"

        echo "::group::Build poppler"
        rm -f ${MXEDIR}/src/poppler*
        cp ci/travis-ci/mxe/poppler* ${MXEDIR}/src/
        cd ${MXEDIR}
        make download-only-poppler
        make build-only-poppler_${MXETARGET}
        echo "::endgroup::"

    - shell: wsl-bash {0}
      run: |
        mkdir test/build
        cd test/build
        /usr/lib/mxe/usr/bin/i686-w64-mingw32.static-cmake -DMXE_USE_CCACHE=OFF ..
        make
        ls

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: test/build/tst.exe


################################################################################

  win:
    name: Windows
    runs-on: windows-latest
    if: false
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup MSYS
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: mingw-w64-x86_64-cmake make mingw-w64-x86_64-gcc mingw-w64-x86_64-qt5-static sed
#        install: mingw-w64-x86_64-cmake git make mingw-w64-x86_64-gcc mingw-w64-x86_64-hunspell mingw-w64-x86_64-lua mingw-w64-x86_64-poppler mingw-w64-x86_64-qt5

    - name: Configure
      run: cmake -G 'MSYS Makefiles' -B build
      working-directory: test

    - name: Build
      run: make -j VERBOSE=1
      working-directory: test/build

    - run: objdump -x test.exe | sed -ne 's/\s*DLL Name:\s+//p'
      working-directory: test/build

    - name: Strip
      run: strip test.exe
      working-directory: test/build

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: test/build/test.exe

    - run: find /mingw64/bin/ -iname '*.dll'

################################################################################

  macos:
    name: Mac OS X (Homebrew)
    runs-on: macos-latest
    if: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - run: mkdir build

    - name: Package
      id: package
      uses: ./.github/actions/package-macos

    - run: echo "${{ steps.package.outputs.file }}"
